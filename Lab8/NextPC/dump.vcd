$date
	Tue Nov 10 23:01:33 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module NextPClogicTest $end
$var wire 64 ! NextPC [63:0] $end
$var reg 1 " ALUZero $end
$var reg 1 # Branch $end
$var reg 64 $ CurrentPC [63:0] $end
$var reg 64 % SignExtImm64 [63:0] $end
$var reg 1 & Uncondbranch $end
$var reg 64 ' expectedNextPC [63:0] $end
$var reg 8 ( numTests [7:0] $end
$var reg 8 ) passed [7:0] $end
$scope module uut $end
$var wire 1 " ALUZero $end
$var wire 1 # Branch $end
$var wire 64 * CurrentPC [63:0] $end
$var wire 64 + SignExtImm64 [63:0] $end
$var wire 1 & Uncondbranch $end
$var reg 64 , NextPC [63:0] $end
$upscope $end
$scope task allPassed $end
$var reg 8 - numTests [7:0] $end
$var reg 8 . passed [7:0] $end
$upscope $end
$scope task passTest $end
$var reg 64 / actualOut [63:0] $end
$var reg 64 0 expectedOut [63:0] $end
$var reg 8 1 passed [7:0] $end
$var reg 257 2 testType [256:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 2
bx 1
bx 0
bx /
bx .
bx -
b100 ,
b0 +
b0 *
b0 )
b0 (
bx '
0&
b0 %
b0 $
0#
0"
b100 !
$end
#3000
b10100 !
b10100 ,
b10100 '
b10000 $
b10000 *
#7000
b11000 !
b11000 ,
b11000 '
1"
1#
b10 %
b10 +
b1 (
b1 )
b1 1
b10100000100001100101011001101000010000001010100011001010111001101110100 2
b10100 0
b10100 /
#11000
b10100 !
b10100 ,
b10100 '
0"
b11 %
b11 +
b10 (
b10 )
b10 1
b10000110110111101101110011001000110100101110100011010010110111101101110011000010110110000100000001011010010000001010100011000010110101101100101001000000100001001110010011000010110111001100011011010000010000001010100011001010111001101110100 2
b11000 0
b11000 /
#15000
b100000 !
b100000 ,
b100000 '
1&
0#
b100 %
b100 +
b11 (
b11 )
b11 1
b110100101110100011010010110111101101110011000010110110000100000001011010010000001000100011011110110111000100111011101000010000001010100011000010110101101100101001000000100001001110010011000010110111001100011011010000010000001010100011001010111001101110100 2
b10100 0
b10100 /
#19000
b10100 !
b10100 ,
b10100 '
0&
1#
b1000 %
b1000 +
b100 (
b100 )
b100 1
b1010101011011100110001101101111011011100110010001101001011101000110100101101111011011100110000101101100001000000100001001110010011000010110111001100011011010000010000001010100011001010111001101110100 2
b100000 0
b100000 /
#23000
b10000 !
b10000 ,
b10000 '
1&
1"
0#
b100 %
b100 +
b0 $
b0 *
b101 (
b101 )
b101 1
b10110111001100001011011000010000001000100011011110110111000100111011101000010000001010100011000010110101101100101001000000100001001110010011000010110111001100011011010000010000001010100011001010111001101110100010110110100111001000101010101110101110100100000 2
b10100 0
b10100 /
#27000
b10100 !
b10100 ,
b10100 '
0&
b0 %
b0 +
b10000 $
b10000 *
b110 (
b110 )
b110 1
b110100101101111011011100110000101101100001000000100001001110010011000010110111001100011011010000010000001110111001011110100000101001100010101010101101001100101011100100110111100100000010101000110010101110011011101000101101101001110010001010101011101011101 2
b10000 0
b10000 /
#31000
b111 -
b111 .
b111 (
b111 )
b111 1
b1010000010000110010101100110100001000000111011100101111010000010100110001010101010110100110010101110010011011110010000001010100011001010111001101110100001000000101101101001110010001010101011101011101 2
b10100 0
b10100 /
